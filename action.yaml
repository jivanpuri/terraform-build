name: 'Build Terraform'
description: 'Generates a tag for the repo'
inputs:
  branch:  # id of input
    description: 'Name of the master branch'
    required: false
    default: 'master'
  terraform-version:
    description: 'Terraform version'
    required: false
    default: 'v1'
  env:
    description: 'Name of the environment'
    required: false
    default: 'prod'

runs:
  using: "composite"
  steps:
    - run: echo Executing against ${{ inputs.branch }} branch.
      shell: bash

    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash          

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: '${{ inputs.branch }}'
      
    - name: Version  
      id: version  
      uses: jivanpuri/get-version@v1  

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # change directory to src
    - run: cd src
      shell: bash

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -input=false
      shell: bash

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive
      shell: bash

    # check if environment specific file exists
    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: "../env/${{ inputs.env }}/terraform.tfvars"

    # Generates an execution plan for Terraform
    - name: Terraform Plan with env
      if: steps.check_files.outputs.files_exists == 'true'
      run: terraform plan -input=false -var-file="../env/${{ inputs.env }}/terraform.tfvars"
      shell: bash

    - name: Terraform Plan
      if: steps.check_files.outputs.files_exists == 'false'
      run: terraform plan -input=false
      shell: bash
